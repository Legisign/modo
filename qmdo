#!/usr/bin/zsh
#
# qmdo -- compile and install Qt localization files
#
# A variant of `modo` for the Qt localization system. Compiles and
# installs `.ts` files.
#
# 2021-10-02    -v, --verbose switch.

emulate -L zsh

declare dest temp qmfile tsfile
declare -a dest1 instopts tsfiles usage verbose

zparseopts -E -D h=usage -help=usage d:=dest1 -destination:=dest1 v:=verbose -verbose:=verbose

if [[ -n $usage ]]; then
    <<EOF
${0:t} -- compile and install Qt localization files

Usage
    ${0:t} -d DIR | --destination=DIR [ other options ] tsfile...

    Compiles and install each tsfile. The target directory can be set with
    -d, --destination command line option or in a qmdo.def file in the
    current directory. The contents of the file is just the directory path.

    NOTE: The target directory MUST be set, it cannot be guessed.

Options
    -d DIR, --destination=DIR   set target directory
    -v, --verbose               show operations
    --help                      show this help and quit
EOF
    exit 0
fi

# `lrelease` required
if [[ -z $(whence lrelease) ]]; then
    print -- ${0:t}: asenna libqt5-linguist 1>&2
    exit 1
fi

# Superuser privileges asked when required
(( $UID > 0 )) || { print -- ${0:t}: älä aja pääkäyttäjänä 1>&2; exit 1 }

# Constants
temp=/tmp/$(whoami)
instopts=(--backup=numbered -m 444)

# Target directory explicitly given on the command line
if (( $#dest1 > 0 )); then
    dest=${dest1[-1]##=}
# If not given, try and read `qmdo.def`, if readable
elif [[ -r qmdo.def ]]; then
    dest=$(<qmdo.def)
else
    print -- ${0:t}: kohdekansiota ei ole määritetty 1>&2
    exit 1
fi
if [[ ! -d $dest ]]; then
    [[ -n $verbose ]] && print -- ${0:t}: luodaan kohdekansio "$dest"
    if ! sudo mkdir -p $dest > /dev/null 2>&1; then
        print -- ${0:t}: kohdekansiota "$dest" ei voitu luoda 1>&2
        exit 1
    fi
fi

# Collect source files
if (( $# > 0 )); then
    tsfiles=($@)
else
    for tsfile in *.ts(.N); do
        qmfile=$dest/${tsfile:t:r}.mo
        [[ ! -f $qmfile || $tsfile -nt $qmfile ]] && tsfiles=($tsfiles $tsfile)
    done
fi
(( $#tsfiles > 0 )) || { print -- ${0:t}: ei lähdetiedostoja 1>&2; exit 0 }

# Set the temp dir
if [[ ! -d $temp ]]; then
    if ! mkdir $temp > /dev/null 2>&1; then
        print -- ${0:t}: väliaikaiskansion luonti epäonnistui 1>&2
        exit 3
    fi
elif ls -1 $temp | grep -q "\.qm\$"; then
    rm $temp/*.qm
fi

# Compile source files
for tsfile in $tsfiles; do
    qmfile=$temp/${tsfile:t:r}.qm
    [[ -n $verbose ]] && print -- ${0:t}: käännetään ${tsfile:t}...

    # Install target files
    if lrelease $tsfile -qm $qmfile > /dev/null 2>&1; then
        [[ -n $verbose ]] && print -- ${0:t}: kopioidaan ${qmfile:t} -\> $dest...
        sudo install $instopts $qmfile $dest && rm $qmfile
    else
        print -- ${0:t}: käännösvirhe: "${tsfile:t}" 1>&2
    fi
done
